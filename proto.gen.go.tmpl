{{- define "proto" -}}
{{- /* Options. Default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "Pkg" (coalesce .Opts.Pkg "proto") -}}
{{- set $opts "Client" (coalesce .Opts.Version false) -}}
{{- set $opts "Server" (coalesce .Opts.Version false) -}}

{{- /* Print help on -Help. */ -}}
{{- if exists .Opts "Help" -}}
  {{ template "help" $opts }}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- printfStderr "  -%v=%q is not supported option\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

{{- /* Type mapping. */ -}}
{{- $type := dict }}
{{- set $type "null" "struct{}" -}}
{{- set $type "any" "interface{}" -}}
{{- set $type "byte" "byte" -}}
{{- set $type "bool" "bool" -}}
{{- set $type "uint" "uint" -}}
{{- set $type "uint8" "uint8" -}}
{{- set $type "uint16" "uint16" -}}
{{- set $type "uint32" "uint32" -}}
{{- set $type "uint64" "uint64" -}}
{{- set $type "int" "int" -}}
{{- set $type "int8" "int8" -}}
{{- set $type "int16" "int16" -}}
{{- set $type "int32" "int32" -}}
{{- set $type "int64" "int64" -}}
{{- set $type "float32" "float32" -}}
{{- set $type "float64" "float64" -}}
{{- set $type "string" "string" -}}
{{- set $type "timestamp" "time.Time" -}}

// {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
// --
// Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
//
// {{.WebrpcGenCommand}}
package {{.Opts.Pkg}}

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

// WebRPC description and code-gen version
func WebRPCVersion() string {
	return "{{.WebrpcVersion}}"
}

// Schema version of your RIDL schema
func WebRPCSchemaVersion() string {
	return "{{.SchemaVersion}}"
}

// Schema hash generated from your RIDL schema
func WebRPCSchemaHash() string {
	return "{{.SchemaHash}}"
}

{{ template "types" dict "Services" .Services "Messages" .Messages "TypeDict" $type }}

{{- if exists .Opts "Server"}}
{{ template "server" dict "Services" .Services "TypeDict" $type }}
{{ end -}}

{{- if exists .Opts "Client" }}
{{ template "client" dict "Services" .Services "TypeDict" $type }}
{{ end -}}

{{ template "helpers" . }}
{{ end }}

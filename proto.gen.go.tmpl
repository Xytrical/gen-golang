{{- define "proto" -}}
{{- /* Options. Default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "Pkg" (first .Opts.Pkg "proto") -}}
{{- set $opts "Client" (first .Opts.Version false) -}}
{{- set $opts "Server" (first .Opts.Version false) -}}

{{- /* Print help on -Help. */ -}}
{{- if exists .Opts "Help" -}}
  {{ template "help" $opts }}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- printfStderr "  -%v=%q is not supported option\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

// {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
// --
// Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
//
// {{.WebrpcGenCommand}}
package {{.Opts.Pkg}}

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

// WebRPC description and code-gen version
func WebRPCVersion() string {
	return "{{.WebrpcVersion}}"
}

// Schema version of your RIDL schema
func WebRPCSchemaVersion() string {
	return "{{.SchemaVersion}}"
}

// Schema hash generated from your RIDL schema
func WebRPCSchemaHash() string {
	return "{{.SchemaHash}}"
}

{{template "types" .}}

{{if exists .Opts "Server"}}
	{{template "server" .}}
{{end}}

{{if exists .Opts "Client"}}
	{{template "client" .}}
{{end}}

{{template "helpers" .}}

{{- end}}
